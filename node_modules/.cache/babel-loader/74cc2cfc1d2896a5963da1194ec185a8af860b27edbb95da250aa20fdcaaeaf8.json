{"ast":null,"code":"var _jsxFileName = \"/home/SebGarcia/Rendu/TestRide/src/components/Pagination.js\";\nimport React from 'react';\nimport NextButton from './NextButton';\nimport PreviousButton from './PreviousButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = _ref => {\n  let {\n    currentPage,\n    handlePageChange,\n    totalPages\n  } = _ref;\n  // le component recupere les 3 props données pas le parent ResourceList\n  const renderPageNumbers = () => {\n    const pageNumbers = []; // declare un array qu'on va peupler avec la boucle\n    for (let i = 1; i <= totalPages; i++) {\n      // pour chaque element de l'array, je cree un bouton avec le numero de page, definis une fonction onclick\n      pageNumbers.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(i) // la fonction passée en props qui change la page actuelle\n        ,\n        className: `px-1 mx-1 rounded bg-yellow-200 text-black ${currentPage === i ? 'active' : ''}` // fait appel à la classe '\"active\" qui change l'apparence du bouton de la page actuelle\n        ,\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this));\n    }\n    return pageNumbers;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentPage > 1 &&\n    /*#__PURE__*/\n    // conditionnal rendering, ne s'affiche pas sur la page 1\n    _jsxDEV(PreviousButton, {\n      onClick: () => handlePageChange(currentPage - 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) // component previous avec call de la fonction en props puis call de la fonction pour generer les boutons de page\n    , renderPageNumbers(), /*#__PURE__*/_jsxDEV(NextButton, {\n      onClick: () => handlePageChange(currentPage + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) // component next avec call de la fonction en props\n  ;\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","NextButton","PreviousButton","jsxDEV","_jsxDEV","Pagination","_ref","currentPage","handlePageChange","totalPages","renderPageNumbers","pageNumbers","i","push","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/SebGarcia/Rendu/TestRide/src/components/Pagination.js"],"sourcesContent":["import React from 'react';\r\nimport NextButton from './NextButton';\r\nimport PreviousButton from './PreviousButton';\r\n\r\nconst Pagination = ({ currentPage, handlePageChange, totalPages }) => { // le component recupere les 3 props données pas le parent ResourceList\r\n  const renderPageNumbers = () => {\r\n    const pageNumbers = [];  // declare un array qu'on va peupler avec la boucle\r\n    for (let i = 1; i <= totalPages; i++) { // pour chaque element de l'array, je cree un bouton avec le numero de page, definis une fonction onclick\r\n      pageNumbers.push(\r\n        <button\r\n          key={i}\r\n          onClick={() => handlePageChange(i)} // la fonction passée en props qui change la page actuelle\r\n          className={`px-1 mx-1 rounded bg-yellow-200 text-black ${currentPage === i ? 'active' : ''}`} // fait appel à la classe '\"active\" qui change l'apparence du bouton de la page actuelle\r\n        >\r\n          {i}\r\n        </button>,\r\n      );\r\n    }\r\n    return pageNumbers;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentPage > 1 && ( // conditionnal rendering, ne s'affiche pas sur la page 1\r\n        <PreviousButton onClick={() => handlePageChange(currentPage - 1)} /> // component previous avec call de la fonction en props puis call de la fonction pour generer les boutons de page\r\n      )}\r\n      {renderPageNumbers()} \r\n      <NextButton onClick={() => handlePageChange(currentPage + 1)} />\r\n    </div>  // component next avec call de la fonction en props\r\n  ); \r\n};\r\n\r\nexport default Pagination;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAGC,IAAA,IAAmD;EAAA,IAAlD;IAAEC,WAAW;IAAEC,gBAAgB;IAAEC;EAAW,CAAC,GAAAH,IAAA;EAAO;EACtE,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAE;IACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,UAAU,EAAEG,CAAC,EAAE,EAAE;MAAE;MACtCD,WAAW,CAACE,IAAI,eACdT,OAAA;QAEEU,OAAO,EAAEA,CAAA,KAAMN,gBAAgB,CAACI,CAAC,CAAE,CAAC;QAAA;QACpCG,SAAS,EAAG,8CAA6CR,WAAW,KAAKK,CAAC,GAAG,QAAQ,GAAG,EAAG,EAAE,CAAC;QAAA;QAAAI,QAAA,EAE7FJ;MAAC,GAJGA,CAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKA,CACV,CAAC;IACH;IACA,OAAOT,WAAW;EACpB,CAAC;EAED,oBACEP,OAAA;IAAAY,QAAA,GACGT,WAAW,GAAG,CAAC;IAAA;IAAM;IACpBH,OAAA,CAACF,cAAc;MAACY,OAAO,EAAEA,CAAA,KAAMN,gBAAgB,CAACD,WAAW,GAAG,CAAC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IACtE,EACAV,iBAAiB,CAAC,CAAC,eACpBN,OAAA,CAACH,UAAU;MAACa,OAAO,EAAEA,CAAA,KAAMN,gBAAgB,CAACD,WAAW,GAAG,CAAC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC,CAAE;EAAA;AAEZ,CAAC;AAACC,EAAA,GA1BIhB,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}